name: iOS Release

on:
  pull_request:
    branches: [ develop ]
    paths:
      - 'lib/**'
  push:
    branches: [ feature/create ]
    paths:
      - 'lib/**'
  workflow_dispatch

jobs:
  build_and_deploy:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.8.1'
      - name: Update Flutter
        run: flutter upgrade
      - name: Install Dependencies
        run: flutter pub get
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: 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
          P12_PASSWORD: 0
          BUILD_PROVISION_PROFILE_BASE64: 
          KEYCHAIN_PASSWORD: 0
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Use keychain profile
        run: |
          pip3 install codemagic-cli-tools
          xcode-project use-profiles

      - name: Building archive
        run: flutter build ios --release --no-codesign
      - name: Building IPA
        run: xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner --config Release
      - name: Update iOS ipa to Pgyer
        run: curl -F "file=@build/ios/ipa/flutter_boilerplate_app.ipa" -F "uKey=77795d4fbdcc66711f199b1d4d87d50e" -F "_api_key=79fdd1bffed67da4ade389c32f866eba" https://upload.pgyer.com/apiv1/app/upload
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
